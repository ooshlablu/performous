## You will need to make the repository you are pushing to Publicly Visible
## to use the actions in the performous repo without modification
name: Build Containers

on:
  #push:
  #  branches:
  #    - "*"
  # On anything pull request related
  #pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  ## Run on a schedule to get monthly updates
  schedule:
    - cron: "* * 28 * *"

  # Run when called from other workflows
  workflow_call:

env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository_owner }}

jobs:
  branch_name:
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.branch_name.outputs.branch_name }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3

      - name: Determine the branch name
        id: branch_name
        run: |
          echo "branch_name=$(git branch --show-current)" >> $GITHUB_OUTPUT

  ubuntu:
    runs-on: ubuntu-latest
    needs:
      - branch_name
    strategy:
      matrix:
        os:
          - 20.04
          - 22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REPO_NAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Ubuntu ${{ matrix.os }} Container
        uses: docker/build-push-action@v3
        with:
          context: docker/
          file: ./docker/Dockerfile.ubuntu
          load: true
          tags: ubuntu${{ matrix.os }}-test
          build-args: OS_VERSION=${{ matrix.os }}
                
      - name: Test performous build
        run: |
          docker run --rm ubuntu${{ matrix.os }}-test ./build_performous.sh -g -R
 
      - name: Push container
        uses: docker/build-push-action@v3
        with:
          context: docker/
          push: true
          file: ./docker/Dockerfile.ubuntu
          tags: ghcr.io/${{ env.REPO_NAME }}/deps:ubuntu${{ matrix.os }}-${{ needs.branch_name.outputs.branch_name }}
          build-args: OS_VERSION=${{ matrix.os }}

  debian:
    runs-on: ubuntu-latest
    needs:
      - branch_name      
    strategy:
      matrix:
        os:
          - 10 # Buster
          - 11 # Bullseye
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}                
          username: ${{ env.REPO_NAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Debian ${{ matrix.os }} Container
        uses: docker/build-push-action@v3
        with:
          context: docker/
          file: ./docker/Dockerfile.debian
          load: true
          tags: debian${{ matrix.os }}-test
          build-args: OS_VERSION=${{ matrix.os }}
                
      - name: Test performous build
        run: |
          docker run --rm debian${{ matrix.os }}-test ./build_performous.sh -g -R

      - name: Push container
        uses: docker/build-push-action@v3
        with:
          context: docker/
          file: ./docker/Dockerfile.debian
          push: true
          tags: ghcr.io/${{ env.REPO_NAME }}/deps:debian${{ matrix.os }}-${{ needs.branch_name.outputs.branch_name }}
          build-args: OS_VERSION=${{ matrix.os }}

  fedora:
    runs-on: ubuntu-latest
    needs:
      - branch_name      
    strategy:
      matrix:
        os:
          - 34
          - 35
          - 36
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}                
          username: ${{ env.REPO_NAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Fedora ${{ matrix.os }} Container
        uses: docker/build-push-action@v3
        with:
          context: docker/
          file: ./docker/Dockerfile.fedora
          load: true
          tags: fedora${{ matrix.os }}-test
          build-args: OS_VERSION=${{ matrix.os }}

      - name: Test performous build
        run: |
          docker run --rm fedora${{ matrix.os }}-test ./build_performous.sh -g -R

      - name: Push container
        uses: docker/build-push-action@v3
        with:
          context: docker/
          file: ./docker/Dockerfile.fedora
          push: true
          tags: ghcr.io/${{ env.REPO_NAME }}/deps:fedora${{ matrix.os }}-${{ needs.branch_name.outputs.branch_name }}
          build-args: OS_VERSION=${{ matrix.os }}
